/*
 * Copyright (c) 2013-2017, ARM Limited and Contributors. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#include <arch.h>
#include <el3_common_macros.S>
#include <platform_def.h>

	.globl	plat_reset_handler

	/*
	 * octeontx_relocation function set this variable to 1 when
	 * it relocate code.
	 */
.balign 8
is_reloc_done:
	.quad 0

	/* --------------------------------------------------------
	 * void plat_reset_handler (void);
	 *
	 * Platform specific configuration right after cpu is
	 * is our of reset.
	 *
	 * The plat_reset_handler can clobber x0 - x18, x30.
	 * --------------------------------------------------------
	 */
func plat_reset_handler
	mov	x18, x30
	adr	x0, is_reloc_done
	ldr	x0, [x0]
	cmp	x0, 0
	b.ne	reloc_done
	bl	octeontx_relocation
reloc_done:
	mov	x30, x18
	ret
endfunc plat_reset_handler

	/* --------------------------------------------------------
	 * void octeontx_relocation (int);
	 *
	 * x1 - points to FDT generated by BDK
	 *
	 * This function copy FDT and relocate code to the linker
	 * address. After relocation (if needed) it jumps to
	 * relocated bl1_entrypoint.
	 *
	 * The octeontx_relocation can clobber x0 - x17, x30.
	 * --------------------------------------------------------
	 */
func octeontx_relocation
	mov	x17, x30
	/*
	 * x1 - points to FDT generated by BDK. Instructions from entrypoint
	 * to this place shouldn't change x1. Copy FDT to desired location.
	 */
	adr	x2, fdt_ptr
	ldr	x0, =FDT_BASE
	str	x0, [x2]
	mov	x2, #FDT_MAX_SIZE
	bl	copy_data

	/*
	 * Relocate to the linker address.
	 * Code to this place is position independent so it can be done there.
	 */
	ldr     x0, =bl2_entrypoint	/* linker address */
	adr     x1, bl2_entrypoint	/* get the loaded address */
	cmp     x0, x1
	b.eq    reloc_end

	ldr	x2, =__RO_START__
	ldr	x3, =__DATA_RAM_END__
	sub	x2, x3, x2 /* size of relocatable part */
reloc_loop:
	ldp     q0, q1, [x1], 32
	subs    w2, w2, 32
	stp     q0, q1, [x0], 32
	b.gt    reloc_loop
	dmb     sy
	ic      ialluis
	dsb     sy
	/* Relocation done, update is_reloc_done variable in relocated code */
	ldr	x0, =is_reloc_done
	mov_imm	x1, 1
	str	x1, [x0]
	/* Jump to relocated entrypoint */
	ldr     x0, =bl2_entrypoint
	br      x0
reloc_end:
	mov	x30, x17
	ret
endfunc octeontx_relocation

func copy_data
copy_loop:
	ldr     x23, [x1]
	str     x23, [x0]
	sub     x2, x2, #8
	add     x1, x1, #8
	add     x0, x0, #8
	cbnz    x2, copy_loop
	ret
endfunc copy_data

